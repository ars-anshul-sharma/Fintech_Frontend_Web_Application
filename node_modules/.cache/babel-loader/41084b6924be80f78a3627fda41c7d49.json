{"remainingRequest":"/Users/ar-pratik.goyal/hello-world/node_modules/babel-loader/lib/index.js!/Users/ar-pratik.goyal/hello-world/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/ar-pratik.goyal/hello-world/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ar-pratik.goyal/hello-world/src/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/ar-pratik.goyal/hello-world/src/App.vue","mtime":1624050977388},{"path":"/Users/ar-pratik.goyal/hello-world/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ar-pratik.goyal/hello-world/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/ar-pratik.goyal/hello-world/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ar-pratik.goyal/hello-world/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["App.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div id=\"app\">\n    <Header />\n    <div class=\"heading\">\n      <h2 class=\"slideFromLeft\">Narrow it down further(Please select below)</h2>\n    </div>\n    <Questions\n      class=\"slideFromRight\"\n      :questions=\"questions\"\n      :questionSelections.sync=\"questionSelections\"\n    />\n\n    <b-row>\n      <b-col md=\"1\" id=\"paymentDiv\">\n        <PaymentTypes\n          class=\"slideFromLeft\"\n          :paymentSelections.sync=\"paymentSelections\"\n          :disabledPayment.sync=\"disabledPayment\"\n          :resetPayment.sync=\"resetPayment\"\n        />\n      </b-col>\n      <b-col v-bind:md=\"showCompare ? '9' : '10'\" id=\"CardTabDiv\">\n        <CardTabs\n          :recommendedCards.sync=\"filteredRecCards\"\n          :OtherCards.sync=\"OtherCards\"\n          :showOtherCards.sync=\"showOtherCards\"\n          :showCompare.sync=\"showCompare\"\n          @comparisonSelectionFromCardTabs=\"updateComparison\"\n        />\n      </b-col>\n      <b-col md=\"1\">\n        <CompareBar\n          :showCompare.sync=\"showCompare\"\n          :compareCards.sync=\"compareCards\"\n        />\n      </b-col>\n    </b-row>\n  </div>\n</template>\n\n<script>\n// import CardTypes from \"./components/CardTypes\";\nimport Header from \"./components/Banner\";\nimport Questions from \"./components/Questions.vue\";\nimport PaymentTypes from \"./components/PaymentTypes.vue\";\nimport CardTabs from \"./components/CardTabs.vue\";\nimport CompareBar from \"./components/CompareBar.vue\";\n\nimport cards_json from \"./data/cards.json\";\nimport questions_json from \"./data/questions.json\";\n\nexport default {\n  name: \"App\",\n  components: {\n    // CardTypes,\n    Header,\n    Questions,\n    PaymentTypes,\n    CardTabs,\n    CompareBar,\n  },\n  methods: {\n    // JSON update methods\n    updateCardsJSON(json) {\n      let cardList = json[\"cards\"];\n      for (let i = 0; i < cardList.length; i++) {\n        const card = cardList[i];\n        this.$set(card, \"selected\", false);\n        this.$set(card, \"flipped\", false);\n      }\n      console.log(cardList);\n      return cardList;\n    },\n    updateQuestionsList(json) {\n      console.log(\"Updating Questions\");\n      let questionsList = json[\"questions\"];\n      for (let i = 0; i < questionsList.length; i++) {\n        const question = questionsList[i];\n        this.$set(question, \"selected\", false);\n      }\n      //   console.log(questionsList);\n      return questionsList;\n    },\n\n    // Method to populate all the cards on launch\n    populateAllCards() {\n      this.filteredRecCards = this.cards;\n    },\n\n    // Method to check if all the selected questions are available in the card features\n    checkAllQuesSelected(card, features, selected) {\n      for (let i = 0; i < selected.length; i++) {\n        let selectedObj = this.questions.filter((x) => selected[i] === x.id);\n        // console.log(\"Selected Obj\", selectedObj);\n        let selectedStr = selectedObj[0].value;\n        if (!features.includes(selectedStr)) {\n          return false;\n        }\n      }\n      return true;\n    },\n\n    // Filtering cards based on the questions and payment types selected\n    updateFilteredCards(quesFilters, paymentFilters) {\n      console.log(\"Questions selected\", quesFilters);\n      console.log(\"Payment Filters\", paymentFilters);\n      if (quesFilters.length === 0) {\n        this.filteredRecCards = this.cards;\n        return;\n      }\n      let recCards = [];\n      for (let i = 0; i < this.cards.length; i++) {\n        if (\n          this.checkAllQuesSelected(\n            this.cards[i],\n            this.cards[i].features,\n            quesFilters\n          )\n        ) {\n          recCards.push(this.cards[i]);\n        }\n      }\n      this.recCards = recCards;\n      console.log(\"Inside Update filter, Recommended Cards\", this.recCards);\n      if (paymentFilters.length === 0) {\n        this.filteredRecCards = recCards;\n        return;\n      }\n      let filteredRecCards = recCards.filter((x) =>\n        paymentFilters.includes(x.type)\n      );\n      this.filteredRecCards = filteredRecCards;\n      console.log(\n        \"Inside Update filter, Filtered Recommended Cards\",\n        this.filteredRecCards\n      );\n    },\n    updateComparison(newValue) {\n      this.comparisonSelection = newValue;\n      // console.log(\"Comparison Selection from App vue\",this.comparisonSelection);\n    },\n    updateCheckBoxes() {\n      let checkboxes = document.querySelectorAll(\n        '.recCards input[type=\"checkbox\"]'\n      );\n      for (let i = 0; i < checkboxes.length; i++) {\n        if (this.compareCards.length === 2) {\n          if (!checkboxes[i].checked) {\n            checkboxes[i].disabled = true;\n          }\n        } else {\n          checkboxes[i].disabled = false;\n        }\n      }\n    },\n    resetPaymentTypes() {\n      let checkboxes = document.querySelectorAll(\n        '#paymentTypes input[type=\"checkbox\"]'\n      );\n      for (let i = 0; i < checkboxes.length; i++) {\n        checkboxes[i].selected = false;\n      }\n      this.paymentSelections = [];\n    },\n  },\n  data: function () {\n    return {\n      cards: this.updateCardsJSON(cards_json),\n      questions: this.updateQuestionsList(questions_json),\n      showCompare: false,\n      disabledPayment: true,\n      showOtherCards: false,\n      questionSelections: [],\n      paymentSelections: [],\n      comparisonSelection: [],\n      OtherCards: [],\n      recCards: [],\n      filteredRecCards: [],\n      compareCards: [],\n    };\n  },\n  beforeMount() {\n    this.populateAllCards();\n  },\n  watch: {\n    questionSelections: {\n      deep: true,\n      handler: function (newValue) {\n        this.disabledPayment = newValue.length === 0;\n        this.showOtherCards = newValue.length > 0;\n        this.updateFilteredCards(newValue, this.paymentSelections);\n      },\n    },\n    paymentSelections: {\n      deep: true,\n      handler: function (newValue) {\n        this.updateFilteredCards(this.questionSelections, newValue);\n      },\n    },\n    filteredRecCards: {\n      deep: true,\n      handler: function (newValue) {\n        let recCardIds = [];\n        for (let i = 0; i < newValue.length; i++) {\n          recCardIds.push(newValue[i].id);\n        }\n        this.OtherCards = this.cards.filter((x) => !recCardIds.includes(x.id));\n      },\n    },\n    comparisonSelection: {\n      deep: true,\n      handler: function (newValue) {\n        console.log(\"Comparison selections App vue\", newValue);\n        this.compareCards = this.cards.filter((x) => newValue.includes(x.id));\n        console.log(\"Compare Cards\", this.compareCards);\n        this.updateCheckBoxes();\n      },\n    },\n  },\n};\n</script>\n\n<style>\n#app {\n  font-family: \"Avenir\", Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  display: flex;\n  flex-direction: column;\n  /* margin-top: 60px; */\n}\n</style>"],"sourceRoot":"src"}]}