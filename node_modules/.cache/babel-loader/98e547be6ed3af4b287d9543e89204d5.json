{"remainingRequest":"/Users/anshul.sharma/Pictures/final_card_apply_poc/node_modules/babel-loader/lib/index.js!/Users/anshul.sharma/Pictures/final_card_apply_poc/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/anshul.sharma/Pictures/final_card_apply_poc/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/anshul.sharma/Pictures/final_card_apply_poc/src/components/Home/Questions.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/anshul.sharma/Pictures/final_card_apply_poc/src/components/Home/Questions.vue","mtime":1624721608000},{"path":"/Users/anshul.sharma/Pictures/final_card_apply_poc/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/anshul.sharma/Pictures/final_card_apply_poc/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/anshul.sharma/Pictures/final_card_apply_poc/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/anshul.sharma/Pictures/final_card_apply_poc/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJRdWVzdGlvbnMiLAogIHByb3BzOiBbInF1ZXN0aW9uU2VsZWN0aW9ucyIsICJxdWVzdGlvbnMiLCAicmVzZXRRdWVzdGlvblNlbGVjdGlvbnMiXSwKICAvLyAgIHsKICAvLyAgICAgICBxdWVzdGlvblNlbGVjdGlvbnMgOiBBcnJheSwKICAvLyAgIH0sCiAgd2F0Y2g6IHsKICAgIHJlc2V0UXVlc3Rpb25TZWxlY3Rpb25zOiB7CiAgICAgIGRlZXA6IHRydWUsCiAgICAgIGhhbmRsZXI6IGZ1bmN0aW9uIGhhbmRsZXIoKSB7CiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLnF1ZXN0aW9ucy5sZW5ndGg7IGkrKykgewogICAgICAgICAgdmFyIGVsZW1lbnQgPSB0aGlzLnF1ZXN0aW9uc1tpXTsKICAgICAgICAgIGVsZW1lbnQuc2VsZWN0ZWQgPSBmYWxzZTsKICAgICAgICB9CgogICAgICAgIHRoaXMucmVzZXRRdWVzdGlvblNlbGVjdGlvbnMgPSBmYWxzZTsKICAgICAgICB0aGlzLiRlbWl0KCJ1cGRhdGU6cmVzZXRRdWVzdGlvblNlbGVjdGlvbnMiLCBmYWxzZSk7CiAgICAgIH0KICAgIH0sCiAgICBxdWVzdGlvblNlbGVjdGlvbnM6IHsKICAgICAgZGVlcDogdHJ1ZSwKICAgICAgaGFuZGxlcjogZnVuY3Rpb24gaGFuZGxlcihuZXdWYWx1ZSkgewogICAgICAgIHRoaXMuJGVtaXQoInVwZGF0ZTpxdWVzdGlvblNlbGVjdGlvbnMiLCBuZXdWYWx1ZSk7CiAgICAgIH0KICAgIH0KICB9Cn07"},{"version":3,"sources":["Questions.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BA,eAAA;AACA,EAAA,IAAA,EAAA,WADA;AAEA,EAAA,KAAA,EAAA,CAAA,oBAAA,EAAA,WAAA,EAAA,yBAAA,CAFA;AAGA;AACA;AACA;AACA,EAAA,KAAA,EAAA;AACA,IAAA,uBAAA,EAAA;AACA,MAAA,IAAA,EAAA,IADA;AAEA,MAAA,OAAA,EAAA,mBAAA;AACA,aAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,KAAA,SAAA,CAAA,MAAA,EAAA,CAAA,EAAA,EAAA;AACA,cAAA,OAAA,GAAA,KAAA,SAAA,CAAA,CAAA,CAAA;AACA,UAAA,OAAA,CAAA,QAAA,GAAA,KAAA;AACA;;AACA,aAAA,uBAAA,GAAA,KAAA;AACA,aAAA,KAAA,CAAA,gCAAA,EAAA,KAAA;AACA;AATA,KADA;AAYA,IAAA,kBAAA,EAAA;AACA,MAAA,IAAA,EAAA,IADA;AAEA,MAAA,OAAA,EAAA,iBAAA,QAAA,EAAA;AACA,aAAA,KAAA,CAAA,2BAAA,EAAA,QAAA;AACA;AAJA;AAZA;AANA,CAAA","sourcesContent":["<template>\n  <b-container class=\"parent\">\n    <b-row id=\"question-list\">\n      <b-col\n        md=\"3\"\n        v-bind:class=\"\n          question.selected\n            ? 'quesInp highlighted ques-card w-10'\n            : 'quesInp ques-card w-10'\n        \"\n        v-for=\"question in questions\"\n        :key=\"question.id\"\n      >\n        <!-- Adding checkbox which will act as the question selection -->\n        <input\n          type=\"checkbox\"\n          v-bind:id=\"question.id\"\n          v-bind:value=\"question.id\"\n          v-model=\"questionSelections\"\n          class=\"inpCheck\"\n          @click=\"question.selected = !question.selected\"\n        />\n        <label class=\"quesInpLabel\" v-bind:for=\"question.id\">\n          <p class=\"quesInpDesc\">{{ question.value }}</p>\n        </label>\n      </b-col>\n    </b-row>\n  </b-container>\n</template>\n\n<script>\nexport default {\n  name: \"Questions\",\n  props: [\"questionSelections\", \"questions\", \"resetQuestionSelections\"],\n  //   {\n  //       questionSelections : Array,\n  //   },\n  watch: {\n    resetQuestionSelections: {\n      deep: true,\n      handler: function () {\n        for (let i = 0; i < this.questions.length; i++) {\n          const element = this.questions[i];\n          element.selected = false;\n        }\n        this.resetQuestionSelections = false;\n        this.$emit(\"update:resetQuestionSelections\", false);\n      },\n    },\n    questionSelections: {\n      deep: true,\n      handler: function (newValue) {\n        this.$emit(\"update:questionSelections\", newValue);\n      },\n    },\n  },\n};\n</script>"],"sourceRoot":"src/components/Home"}]}