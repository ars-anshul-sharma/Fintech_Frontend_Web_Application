{"remainingRequest":"/Users/anshul.sharma/Pictures/final_card_apply_poc/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/anshul.sharma/Pictures/final_card_apply_poc/src/components/Home/Card.vue?vue&type=style&index=0&id=11c34660&scoped=true&lang=css&","dependencies":[{"path":"/Users/anshul.sharma/Pictures/final_card_apply_poc/src/components/Home/Card.vue","mtime":1624721608000},{"path":"/Users/anshul.sharma/Pictures/final_card_apply_poc/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/anshul.sharma/Pictures/final_card_apply_poc/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/anshul.sharma/Pictures/final_card_apply_poc/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/anshul.sharma/Pictures/final_card_apply_poc/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/anshul.sharma/Pictures/final_card_apply_poc/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5wcmljZSwKLmNhcmRfbmFtZSB7CiAgbWF4LXdpZHRoOiAxMDAlOwp9Ci5wcmljZSB7CiAgZm9udC13ZWlnaHQ6IGJvbGRlcjsKfQouY2FyZF9uYW1lIHsKICBtYXJnaW4tdG9wOiA1JTsKICBmb250LXdlaWdodDogYm9sZDsKICBmb250LXNpemU6IDAuNnZ3OwogIGRpc3BsYXk6IGZsZXg7CiAgZmxleC1kaXJlY3Rpb246IHJvdzsKICBhbGlnbi1pdGVtczogY2VudGVyOwogIGp1c3RpZnktY29udGVudDogY2VudGVyOwogIHdpZHRoOiAxMDAlOwp9Ci5wcmljZS1kZXNjIHsKICBmb250LXNpemU6IDAuOGVtOwogIG1hcmdpbjogMiUgMCA1JTsKfQoucmFrTG9nbyB7CiAgd2lkdGg6IDEwJTsKICBtYXJnaW4tcmlnaHQ6IDMlOwp9Cmg2IHsKICBtYXJnaW46IDA7CiAgZm9udC1zaXplOiAxLjc1ZW07CiAgZm9udC13ZWlnaHQ6IDEwMDA7Cn0K"},{"version":3,"sources":["Card.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Card.vue","sourceRoot":"src/components/Home","sourcesContent":["<template>\n  <div>\n    <!-- Compare bar to show the checkbox to select the card for comparison and the label for it\n    1. showCompare is the prop used to enable the compare bar and allow user to compare\n    2. comparisonSelection (Array) is the prop used to store the selected cards for comparison -->\n\n    <div class=\"compare-bar\" v-if=\"showCompare\">\n      <input\n        type=\"checkbox\"\n        v-bind:id=\"'card_' + card.id\"\n        v-bind:value=\"card.id\"\n        v-model=\"comparisonSelection\"\n        class=\"inpCompare\"\n        v-on:click=\"card.selected = !card.selected\"\n      />\n      <label class=\"compare-lbl\" v-bind:for=\"'card_' + card.id\">\n        Add to Compare\n      </label>\n    </div>\n\n    <!-- Designed the card to show an info button on hover and on click, the card flips to reveal the details -->\n    <div\n      v-bind:id=\"card.id\"\n      v-bind:title=\"card.name\"\n      v-bind:class=\"\n        card.flipped ? 'flip-container card-1 flipped' : 'flip-container card-1'\n      \"\n    >\n      <div class=\"flipper\">\n        <!-- front portion of the card, incl. the info button, the card image and the flip button -->\n\n        <div class=\"front\">\n          <slot name=\"front\"></slot>\n          <div\n            class=\"frontFlipBtn\"\n            v-on:click=\"card.flipped = true\"\n            v-bind:title=\"card.name\"\n          >\n            <img class=\"info\" src=\"../../assets/information-button.png\" />\n            <!-- \"require\" is used to force vue to access the image dependency dynamically -->\n            <img\n              class=\"card-image\"\n              v-bind:src=\"require('../../assets/cards/' + card.image)\"\n            />\n          </div>\n        </div>\n\n        <!-- back portion of the card which contains the description and two buttons - 1. one to close the flipped card, 2. View details of the card and apply -->\n        <div class=\"back\">\n          <div class=\"card-desc\">\n            <div class=\"card_name\">\n              <img class=\"rakLogo\" src=\"../../assets/rakuten_logo.png\" alt=\"\" />\n              <h6 class=\"\">{{ getName(card) }}</h6>\n            </div>\n            <p class=\"price-desc\">Annual Membership Fee</p>\n            <h2 class=\"price\">{{ getPrice(card) }}</h2>\n          </div>\n          <div id=\"actions\">\n            <b-button\n              class=\"backFlipBtn close\"\n              v-on:click=\"card.flipped = false\"\n              >Close</b-button\n            >\n            <!-- Bind the card to a specific modal to handle duplication -->\n            <b-button class=\"details\" v-b-modal=\"'modal' + card.id\"\n              >View Details</b-button\n            >\n            <!-- passing the card data to the cardModal to view the details -->\n            <CardModal :card=\"card\" />\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport CardModal from \"./CardModal.vue\";\nexport default {\n  name: \"Card\",\n  components: { CardModal },\n  props: [\"card\", \"showCompare\", \"comparisonSelection\"],\n  // {\n  //   card: Object,\n  //   showCompare: Boolean,\n  //   comparisonSelection: Array,\n  // },\n  watch: {\n    // On any change in the selections made for comparison, this gets triggered\n    comparisonSelection: {\n      deep: true,\n      handler: function (newValue) {\n        // Updating the parent data using this\n        this.$emit(\"update:comparisonSelection\", newValue);\n        console.log(\"Comparison Selection Card\", newValue);\n      },\n    },\n  },\n  data: function () {\n    return {};\n  },\n  methods: {\n    // Method to get the price value from the list of comparables of a card\n    getName(card) {\n      let name = card.name;\n      name = name\n        .replace(\"Rakuten\", \"\")\n        .replace(\"rakuten\", \"\")\n        .replace(\"RAKUTEN\", \"\");\n      return name;\n    },\n    getPrice(card) {\n      for (let i = 0; i < card.comparables.length; i++) {\n        const ele = card.comparables[i];\n        if (ele.name === \"Annual membership fee (tax included)\") {\n          // values[0] because there will only be 1 value for the annual membership pricing\n          let val = ele.values[0];\n          if (val.includes(\"Free\")) {\n            val = \"Free/-*\";\n          } else {\n            val += \"/-\";\n          }\n          return val;\n        }\n      }\n      // If there is no key called \"Pricing\", it will show \"N/A\"\n      return \"N/A\";\n    },\n  },\n};\n</script>\n\n<style scoped>\n.price,\n.card_name {\n  max-width: 100%;\n}\n.price {\n  font-weight: bolder;\n}\n.card_name {\n  margin-top: 5%;\n  font-weight: bold;\n  font-size: 0.6vw;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n}\n.price-desc {\n  font-size: 0.8em;\n  margin: 2% 0 5%;\n}\n.rakLogo {\n  width: 10%;\n  margin-right: 3%;\n}\nh6 {\n  margin: 0;\n  font-size: 1.75em;\n  font-weight: 1000;\n}\n</style>"]}]}