{"remainingRequest":"/Users/ar-anshul.sharma/Downloads/final_card_apply_poc/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ar-anshul.sharma/Downloads/final_card_apply_poc/src/components/Home/PaymentTypes.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/ar-anshul.sharma/Downloads/final_card_apply_poc/src/components/Home/PaymentTypes.vue","mtime":1624721608000},{"path":"/Users/ar-anshul.sharma/Downloads/final_card_apply_poc/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ar-anshul.sharma/Downloads/final_card_apply_poc/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/ar-anshul.sharma/Downloads/final_card_apply_poc/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ar-anshul.sharma/Downloads/final_card_apply_poc/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBqc29uIGZyb20gIi4uLy4uL2RhdGEvcGF5bWVudFR5cGVzLmpzb24iOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogIlBheW1lbnRUeXBlcyIsCiAgcHJvcHM6IFsicGF5bWVudFNlbGVjdGlvbnMiLCAiZGlzYWJsZWRQYXltZW50Il0sCiAgZGF0YTogZnVuY3Rpb24gKCkgewogICAgcmV0dXJuIHsKICAgICAgcGF5bWVudFR5cGVMaXN0OiB0aGlzLnVwZGF0ZVBheW1lbnRUeXBlTGlzdChqc29uKSwKICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICAvL1VwZGF0aW5nIHRoZSByYXcgcGF5bWVudCBUeXBlIGRhdGEgd2l0aCB0aGUgc2VsZWN0ZWQga2V5LXZhbHVlIHBhaXIKICAgIHVwZGF0ZVBheW1lbnRUeXBlTGlzdChqc29uKSB7CiAgICAgIGxldCBwYXltZW50TGlzdCA9IGpzb25bInBheW1lbnRUeXBlcyJdOwogICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHBheW1lbnRMaXN0Lmxlbmd0aDsgaSsrKSB7CiAgICAgICAgY29uc3QgcGF5bWVudFR5cGUgPSBwYXltZW50TGlzdFtpXTsKICAgICAgICB0aGlzLiRzZXQocGF5bWVudFR5cGUsICJzZWxlY3RlZCIsIGZhbHNlKTsKICAgICAgfQogICAgICByZXR1cm4gcGF5bWVudExpc3Q7CiAgICB9LAogIH0sCiAgd2F0Y2g6IHsKICAgIC8vIHdoZW5ldmVyIHRoZXJlIGlzIGEgY2hhbmdlIGluIHRoZSBzZWxlY3Rpb24gZm9yIHRoZSBwYXltZW50IHR5cGVzLCB0aGlzIGdldHMgdHJpZ2dlcmVkCiAgICBwYXltZW50U2VsZWN0aW9uczogewogICAgICBkZWVwOiB0cnVlLAogICAgICBoYW5kbGVyOiBmdW5jdGlvbiAobmV3VmFsdWUpIHsKICAgICAgICB0aGlzLiRlbWl0KCJ1cGRhdGU6cGF5bWVudFNlbGVjdGlvbnMiLCBuZXdWYWx1ZSk7CiAgICAgIH0sCiAgICB9LAogICAgZGlzYWJsZWRQYXltZW50OiB7CiAgICAgIGRlZXA6IHRydWUsCiAgICAgIGhhbmRsZXI6IGZ1bmN0aW9uIChuZXdWYWx1ZSkgewogICAgICAgIHRoaXMuJGVtaXQoInVwZGF0ZTpkaXNhYmxlZFBheW1lbnQiLCBuZXdWYWx1ZSk7CiAgICAgIH0sCiAgICB9LAogIH0sCn07Cg=="},{"version":3,"sources":["PaymentTypes.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"PaymentTypes.vue","sourceRoot":"src/components/Home","sourcesContent":["<template>\n  <b-container class=\"parent\">\n    <b-row id=\"paymentTypes\">\n      <!-- if the disabledPayment prop is set to false, disabled the checkbox for the payment type -->\n      <b-col\n        md=\"12\"\n        v-bind:class=\"\n          disabledPayment\n            ? 'questionInp btn-card disabled'\n            : payment.selected\n            ? 'questionInp highlighted btn-card'\n            : 'questionInp btn-card'\n        \"\n        v-for=\"payment in paymentTypeList\"\n        :key=\"payment.id\"\n      >\n        <!-- Adding checkbox which will act as the question selection -->\n        <input\n          type=\"checkbox\"\n          v-bind:id=\"payment.id\"\n          v-bind:value=\"payment.id\"\n          v-model=\"paymentSelections\"\n          class=\"inpCheck\"\n          @click=\"payment.selected = !payment.selected\"\n        />\n        <label class=\"quesLabel\" v-bind:for=\"payment.id\">\n          <img\n            v-bind:src=\"require('../../assets/paymentTypes/' + payment.image)\"\n            alt=\"\"\n            class=\"type-img\"\n          />\n        </label>\n      </b-col>\n    </b-row>\n  </b-container>\n</template>\n\n<script>\nimport json from \"../../data/paymentTypes.json\";\nexport default {\n  name: \"PaymentTypes\",\n  props: [\"paymentSelections\", \"disabledPayment\"],\n  data: function () {\n    return {\n      paymentTypeList: this.updatePaymentTypeList(json),\n    };\n  },\n  methods: {\n    //Updating the raw payment Type data with the selected key-value pair\n    updatePaymentTypeList(json) {\n      let paymentList = json[\"paymentTypes\"];\n      for (let i = 0; i < paymentList.length; i++) {\n        const paymentType = paymentList[i];\n        this.$set(paymentType, \"selected\", false);\n      }\n      return paymentList;\n    },\n  },\n  watch: {\n    // whenever there is a change in the selection for the payment types, this gets triggered\n    paymentSelections: {\n      deep: true,\n      handler: function (newValue) {\n        this.$emit(\"update:paymentSelections\", newValue);\n      },\n    },\n    disabledPayment: {\n      deep: true,\n      handler: function (newValue) {\n        this.$emit(\"update:disabledPayment\", newValue);\n      },\n    },\n  },\n};\n</script>"]}]}